@page
@using StoreManagement.Entities;
@using StoreManagement.Data;
@using StoreManagement.Logic;
@model OutDate_ProductModel

@{
    string userGlobal = Request.Query["User"];
    ViewData["User"] = userGlobal;

    bool validUser = User_Logic.FindUserByUserName(userGlobal);
}

@if (!validUser)
{
    string errorMessage = "noUser";
    Response.Redirect("/Error?error=" + errorMessage);
}


@{
    ViewData["TitleParent"] = "Sản phẩm";
    ViewData["BreadcrumbsParent"] = "List_Product?User=" + userGlobal;
    ViewData["TitleCurrent"] = "Danh sách sản phẩm tồn kho";
    ViewData["BreadcrumbsCurrent"] = "Inventory_Product?User=" + userGlobal;
}

@{
    string keySearch = string.Empty;
    string searchFor = string.Empty;
    string select = string.Empty;
    string[] productInfo = new string[] { "Tên sản phẩm", "Mã sản phẩm", "Ngày hết hạn", "Công ty", "Ngày sản xuất", "Loại hàng", "Giá" };

    Product[]? listProductsTemp;
    listProductsTemp = Product_Logic.FindInventoryProduct();
    int[] quantityProductTemp = Product_Logic.FindInventoryProductQuantity();
    int n = 0;
    for (int i = 0; i < listProductsTemp.Length; i++)
    {
        if (quantityProductTemp[i] > 0)
        {
            n++;
        }
    }

    Product[] listProducts = new Product[n];
    int[] quantityProduct = new int[n];
    int k = 0;
    for (int i = 0; i < listProductsTemp.Length; i++)
    {
        if (quantityProductTemp[i] > 0)
        {
            listProducts[k] = listProductsTemp[i];
            quantityProduct[k] = quantityProductTemp[i];
            k++;
        }
    }
}

@*HTML*@
<div class="content">
    <div class="top">
        <div class="title">
            DANH SÁCH SẢN PHẨM
            <div class="note">(Kéo lên-xuống, trái-phải để xem đầy đủ thông tin bảng)</div>
        </div>
    </div>
    <div class="list">
        <table>
            <tr>
                <th>Mã sản phẩm</th>
                <th>Tên sản phẩm</th>
                <th>Ngày hết hạn</th>
                <th>Công ty</th>
                <th>Ngày sản xuất</th>
                <th>Loại hàng</th>
                <th>Giá</th>
                <th>Số lượng tồn kho</th>
            </tr>
            @if (listProducts != null)
            {
                @for (int i = 0; i < listProducts.Length; i++)
                {
                    <tr>
                        <td>@listProducts[i].Id</td>
                        <td>@listProducts[i].Name</td>
                        <td>@listProducts[i].ExpiredDate</td>
                        <td>@listProducts[i].Company</td>
                        <td>@listProducts[i].ManufactureDate</td>
                        <td>@listProducts[i].Category</td>
                        <td>@listProducts[i].Price</td>
                        <td>@quantityProduct[i]</td>
                    </tr>
                }
            }
        </table>

        @if (listProducts != null)
        {
            <div class="endtable">
                <span>Tổng số sản phẩm:</span>&nbsp;&nbsp;&nbsp;<span>@listProducts.Length</span>
            </div>
        }
        else
        {
            <div class="endtable">
                <span>Tổng số sản phẩm:</span>&nbsp;&nbsp;&nbsp;<span>0</span>
            </div>
        }
    </div>
</div>


@*CSS*@
<style>

    .content {
        font-family: Arial, sans-serif;
        width: 100vw;
    }

    .top {
        width: 70vw;
        display: flex;
        flex-direction: row;
        justify-content: space-between;
    }

        .top .title {
            color: #ffffff;
            font-size: 14px;
            font-weight: bold;
            margin-left: 10px;
        }

        .top .note {
            font-size: 10px;
            font-weight: lighter;
            margin-top: 10px;
            font-style: italic;
        }



    .list {
        width: 75vw;
        max-height: 65vh;
        font-size: 12px;
        margin-top: 30px;
        overflow: auto
    }

        .list table {
            width: 70vw;
            height: auto;
            border-collapse: collapse;
            background-color: #1F2937;
        }

        .list td, th {
            border-bottom: 1px solid #374151;
            text-align: center;
            padding: 15px 10px;
            height: auto;
        }

        .list td {
            background-color: #1F2937;
            font-weight: lighter;
            font-size: 12px;
        }



        .list .endtable {
            height: 50px;
            width: 70vw;
            background-color: #1F2937;
            border-bottom: 1px solid #374151;
            color: #ffffff;
            font-size: 12px;
            display: flex;
            justify-content: center;
            align-items: center;
            font-weight: bold;
        }

    .display-none {
        display: none !important;
    }

    /*Responsive*/
    @@media (min-width:610px) and (max-width: 1140px) {
        .top, .list, .list table, .list .endtable {
            width: 85vw;
        }

            .list .endtable {
                min-width: 558.225px;
            }

            .top .title {
                margin-left: 5px;
            }
    }

    @@media only screen and (max-width: 610px) {
        .list .endtable, .list table {
            width: 558.225px;
        }

        .top .title {
            margin-left: 5px;
        }
    }

    @@media only screen and (max-height: 560px) {
        .top, .list, .list table, .list .endtable {
            width: 85vw;
        }

            .list .endtable {
                min-width: 558.225px;
            }

            .top .title {
                margin-left: 5px;
            }
    }

</style>